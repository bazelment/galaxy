load("//third_party/aws:expand_template.bzl", "expand_template")

expand_template(
    name = "config_h",
    template = "src/include/aws/common/config.h.in",
    out = "src/include/aws/common/config.h",
    substitutions = {
        "#cmakedefine AWS_HAVE_GCC_OVERFLOW_MATH_EXTENSIONS": "#define AWS_HAVE_GCC_OVERFLOW_MATH_EXTENSIONS",
        "#cmakedefine AWS_HAVE_GCC_INLINE_ASM": "#define AWS_HAVE_GCC_INLINE_ASM",
        "#cmakedefine AWS_HAVE_MSVC_MULX": "",
        "#cmakedefine AWS_HAVE_POSIX_LARGE_FILE_SUPPORT": "#define AWS_HAVE_POSIX_LARGE_FILE_SUPPORT",
        "#cmakedefine AWS_HAVE_EXECINFO": "#define AWS_HAVE_EXECINFO",
        "#cmakedefine AWS_HAVE_WINAPI_DESKTOP": "",
        "#cmakedefine AWS_HAVE_LINUX_IF_LINK_H": "#define AWS_HAVE_LINUX_IF_LINK_H",
    },
)

cc_library(
    name = "aws-c-common",
    includes = [
        "src/include",
    ],
    hdrs = [
        ":config_h",
        #glob src/include/*/common/*
        "src/include/aws/common/allocator.h",
        "src/include/aws/common/array_list.h",
        "src/include/aws/common/array_list.inl",
        "src/include/aws/common/assert.h",
        "src/include/aws/common/atomics.h",
        "src/include/aws/common/atomics.inl",
        "src/include/aws/common/atomics_fallback.inl",
        "src/include/aws/common/atomics_gnu.inl",
        "src/include/aws/common/atomics_gnu_old.inl",
        "src/include/aws/common/atomics_msvc.inl",
        "src/include/aws/common/bus.h",
        "src/include/aws/common/byte_buf.h",
        "src/include/aws/common/byte_order.h",
        "src/include/aws/common/byte_order.inl",
        "src/include/aws/common/cache.h",
        "src/include/aws/common/clock.h",
        "src/include/aws/common/clock.inl",
        "src/include/aws/common/command_line_parser.h",
        "src/include/aws/common/common.h",
        "src/include/aws/common/condition_variable.h",
        "src/include/aws/common/config.h.in",
        "src/include/aws/common/cpuid.h",
        "src/include/aws/common/date_time.h",
        "src/include/aws/common/device_random.h",
        "src/include/aws/common/encoding.h",
        "src/include/aws/common/encoding.inl",
        "src/include/aws/common/environment.h",
        "src/include/aws/common/error.h",
        "src/include/aws/common/error.inl",
        "src/include/aws/common/exports.h",
        "src/include/aws/common/external",
        "src/include/aws/common/fifo_cache.h",
        "src/include/aws/common/file.h",
        "src/include/aws/common/hash_table.h",
        "src/include/aws/common/json.h",
        "src/include/aws/common/lifo_cache.h",
        "src/include/aws/common/linked_hash_table.h",
        "src/include/aws/common/linked_list.h",
        "src/include/aws/common/linked_list.inl",
        "src/include/aws/common/log_channel.h",
        "src/include/aws/common/log_formatter.h",
        "src/include/aws/common/log_writer.h",
        "src/include/aws/common/logging.h",
        "src/include/aws/common/lru_cache.h",
        "src/include/aws/common/macros.h",
        "src/include/aws/common/math.cbmc.inl",
        "src/include/aws/common/math.fallback.inl",
        "src/include/aws/common/math.gcc_arm64_asm.inl",
        "src/include/aws/common/math.gcc_builtin.inl",
        "src/include/aws/common/math.gcc_overflow.inl",
        "src/include/aws/common/math.gcc_x64_asm.inl",
        "src/include/aws/common/math.h",
        "src/include/aws/common/math.inl",
        "src/include/aws/common/math.msvc.inl",
        "src/include/aws/common/mutex.h",
        "src/include/aws/common/package.h",
        "src/include/aws/common/platform.h",
        "src/include/aws/common/posix",
        "src/include/aws/common/predicates.h",
        "src/include/aws/common/priority_queue.h",
        "src/include/aws/common/private",
        "src/include/aws/common/process.h",
        "src/include/aws/common/promise.h",
        "src/include/aws/common/ref_count.h",
        "src/include/aws/common/ring_buffer.h",
        "src/include/aws/common/ring_buffer.inl",
        "src/include/aws/common/rw_lock.h",
        "src/include/aws/common/statistics.h",
        "src/include/aws/common/stdbool.h",
        "src/include/aws/common/stdint.h",
        "src/include/aws/common/string.h",
        "src/include/aws/common/string.inl",
        "src/include/aws/common/system_info.h",
        "src/include/aws/common/task_scheduler.h",
        "src/include/aws/common/thread.h",
        "src/include/aws/common/thread_scheduler.h",
        "src/include/aws/common/time.h",
        "src/include/aws/common/uri.h",
        "src/include/aws/common/uuid.h",
        "src/include/aws/common/xml_parser.h",
        "src/include/aws/common/zero.h",
        "src/include/aws/common/zero.inl"
    ],
    srcs = [
        "src/source/allocator.c",
        "src/source/allocator_sba.c",
        "src/source/array_list.c",
        "src/source/assert.c",
        "src/source/bus.c",
        "src/source/byte_buf.c",
        "src/source/cache.c",
        "src/source/codegen.c",
        "src/source/command_line_parser.c",
        "src/source/common.c",
        "src/source/condition_variable.c",
        "src/source/date_time.c",
        "src/source/device_random.c",
        "src/source/encoding.c",
        "src/source/error.c",
        "src/source/fifo_cache.c",
        "src/source/file.c",
        "src/source/hash_table.c",
        "src/source/json.c",
        "src/source/lifo_cache.c",
        "src/source/linked_hash_table.c",
        "src/source/log_channel.c",
        "src/source/log_formatter.c",
        "src/source/log_writer.c",
        "src/source/logging.c",
        "src/source/lru_cache.c",
        "src/source/math.c",
        "src/source/memtrace.c",
        "src/source/priority_queue.c",
        "src/source/process_common.c",
        "src/source/promise.c",
        "src/source/ref_count.c",
        "src/source/ring_buffer.c",
        "src/source/statistics.c",
        "src/source/string.c",
        "src/source/task_scheduler.c",
        "src/source/thread_scheduler.c",
        "src/source/thread_shared.c",
        "src/source/uri.c",
        "src/source/uuid.c",
        "src/source/xml_parser.c"
    ],
    visibility = [
        "//visibility:public",
    ]
)
